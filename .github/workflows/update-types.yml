name: update types
on:
  schedule:
    - cron: "*/60 * * * *"
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      PROJECT_ID: ${{vars.SUPABASE_PROJECT_ID}}
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: |
          npm run update-types
      - name: Install ESLint TypeScript plugin
        run: |
          npm install @typescript-eslint/eslint-plugin@latest --save-dev
      - name: Run ESLint
        run: |
          npx eslint "{src,apps,libs,test}/**/*.ts" --fix
      - name: Check for file changes
        id: git_status
        run: |
          echo "::set-output name=status::$(git status -s)"
      - name: Install GitHub CLI
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y
      - name: Commit files
        if: ${{contains(steps.git_status.outputs.status, ' ')}}
        run: |
          git checkout -b update-types-$(date +%Y%m%d%H%M%S)
          git add src/utils/database.ts
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "Update database types" -a
      - name: Push changes and create PR
        if: ${{contains(steps.git_status.outputs.status, ' ')}}
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push origin HEAD
          gh auth login --with-token <<< ${{ secrets.GITHUB_TOKEN }}
          gh pr create --title "Update database types" --body "This PR updates the database types." --base main --head $(git symbolic-ref --short HEAD) --repo ${{ github.repository }}
